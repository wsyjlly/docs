(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{210:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"language-docker extra-class"},[s("pre",{pre:!0,attrs:{class:"language-docker"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装docker")]),t._v("\nyum install docker\ndocker ps "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a\ndocker images\ndocker run image\ndocker build\ndocker start/stop/rm container\ndocker exec\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Redis安装")]),t._v("\ndocker pull redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("4.0\ndocker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis01"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("v /ysw/redis/data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/data  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6379 redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("4.0 redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("serser "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("appendonly yes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("requirepass "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root@234"')]),t._v("\ndocker exec "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("it redis01 redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cli "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("h 127.0.0.1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 6379 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a root@234\ndocker exec "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("it demo01 /bin/bash\ndocker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("it "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"static"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("v /ysw/app/data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/ysw/app/uploadFiles "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8080 demo05"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("static\ndocker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("it "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name demo01 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8080 demo01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.0\ndocker exec "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("it redis01 redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cli "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("h 127.0.0.1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 6379 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a root@234\ndocker exec "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("it demo01 /bin/bash\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# MYSQL")]),t._v("\ndocker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name mysql56 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 3306"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3306 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("e MYSQL_ROOT_PASSWORD=234 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5.6 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server=utf8 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("collation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server=utf8_general_ci\ndocker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name mysql56 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("v /ysw/mysql/config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/mysql "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 3306"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3306 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("e MYSQL_ROOT_PASSWORD=234 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5.6 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server=utf8 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("collation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server=utf8_general_ci\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解决外部访问数据中文乱码的问题")]),t._v("\nSET NAMES "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),t._v(";\n等同以下三条命令\nSET character_set_client = utf8;\nSET character_set_results = utf8;\nSET character_set_connection = utf8;\n\n配置文件位置：\nvim etc/mysql/mysql.conf.d/mysql.cnf\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mysqld"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set = utf8\ncharacter_set_server = utf8\ndefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set = utf8\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set = utf8\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mysql.server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set = utf8\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mysqld_safe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set = utf8\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("character"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("set = utf8\n\n\n\n\n\nDockers容器内使用vim\n1.apt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get update\n2.apt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get install vim \n\nDocker 命令大全\n================================================================\n容器生命周期管理\n    run创建一个新的容器并运行一个命令\n        docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTIONS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" IMAGE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("COMMAND"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ARG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        OPTIONS说明：\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a stdin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 后台运行容器，并返回容器ID；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 以交互模式运行容器，通常与 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t 同时使用；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 随机端口映射，容器内部端口随机映射到主机的高端口\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 指定端口映射，格式为：主机(宿主)端口"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("容器端口\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 为容器重新分配一个伪输入终端，通常与 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i 同时使用；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx-lb"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 为容器指定一个名称；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dns 8.8.8.8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 指定容器使用的DNS服务器，默认和宿主一致；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("search example.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 指定容器DNS搜索域名，默认和宿主一致；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mars"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 指定容器的hostname；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("e username="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ritchie"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 设置环境变量；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("file="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 从指定文件读入环境变量；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cpuset="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0-2"')]),t._v(" or "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cpuset="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0,1,2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 绑定容器到指定CPU运行；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("设置容器使用内存最大值；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("net="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bridge"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 指定容器的网络连接类型，支持 bridge/host/none/container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 四种类型；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("link="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 添加链接到另一个容器；\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("expose="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 开放一个端口或一组端口； \n    start/stop/restart\n    kill\n    rm\n    pause/unpause\n    create\n    exec\n\n容器操作\n    ps\n    inspect\n    top\n    attach\n    events\n    logs\n    wait\n    export\n    port\n\n容器rootfs命令\n    commit\n    cp\n    diff\n\n镜像仓库\n    login\n    pull\n    push\n    search\n\n本地镜像管理\n    images\n    rmi\n    tag\n    build\n    history\n    save\n    load\n    import\n\ninfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("version\n    info\n    version\n\n\n\n\n\n\ndocker容器使用\n================================================================\n@       通过命令 docker command "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("help 更深入的了解指定的 Docker 命令使用方法。 \ndocker stats "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("help \n\n@       在docker容器中运行一个 Python Flask 应用来运行一个web应用\ndocker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("P training/webapp python app.py\n\n@       使用 docker ps 来查看我们正在运行的容器\ndocker ps\n\n@       使用 docker port 可以查看指定 （ID或者名字）容器的某个确定端口映射到宿主机的端口号\n我们创建的web应用容器ID为"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("7a38a1ad55c6 名字为：determined_swanson\n使用docker port 7a38a1ad55c6 或docker port determined_swanson来查看容器端口的映射情况\n\n@       docker logs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ID或者名字"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 可以查看容器内部的标准输出。\ndocker logs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f 7a38a1ad55c6\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("让 dokcer logs 像使用 tail "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f 一样来输出容器内部的标准输出\n\n@       使用 docker top 来查看容器内部运行的进程\ndocker top determined_swanson\n\n@       使用 docker inspect 来查看Docker的底层信息。它会返回一个 JSON 文件记录着 Docker 容器的配置和状态信息\ndocker inspect determined_swanson\n\n@       停止WEB应用容器\ndocker stop determined_swanson   \n\n@       重启WEB应用容器\n已经停止的容器，我们可以使用命令 docker start 来启动\n正在运行的容器，我们可以使用 docker restart 命令来重启\ndocker start determined_swanson\ndocker restart determined_swanson\n\n@       使用 docker rm 命令来删除不需要的容器，删除容器时，容器必须是停止状态\ndocker rm determined_swanson  \n\n\n\n\ndocker镜像使用\n================================================================\n@       获取一个新的镜像\n当我们在本地主机上使用一个不存在的镜像时 Docker 就会自动下载这个镜像。如果我们想预先下载这个镜像，我们可以使用 docker pull 命令来下载它。\ndocker pull\n\n@       查找镜像\n我们可以从 Docker Hub 网站来搜索镜像，Docker Hub 网址为： https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//hub.docker.com/\n我们也可以使用 docker search 命令来搜索镜像\ndocker search httpd\nNAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("镜像仓库源的名称\nDESCRIPTION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("镜像的描述\nOFFICIAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("是否docker官方发布\n\n@     拖取镜像\n我们决定使用上图中的httpd 官方版本的镜像，使用命令 docker pull 来下载镜像。\ndocker pull httpd\n\n@       使用镜像\ndocker run httpd\n\n@       创建镜像\n当我们从docker镜像仓库中下载的镜像不能满足我们的需求时，我们可以通过以下两种方式对镜像进行更改。\n1.从已经创建的容器中更新镜像，并且提交这个镜像\n2.使用 Dockerfile 指令来创建一个新的镜像\n\n@       更新镜像\n更新镜像之前，我们需要使用镜像来创建一个容器。 \nrunoob@runoob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("~$ docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("15.10 /bin/bash\nroot@e218edb10161"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n在运行的容器内使用 apt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get update 命令进行更新。\n在完成操作之后，输入 exit命令来退出这个容器。\n此时ID为e218edb10161的容器，是按我们的需求更改的容器。我们可以通过命令 docker commit来提交容器副本。\nrunoob@runoob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("~$ docker commit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("m="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"has update"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),t._v(" e218edb10161 runoob/ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v2\nsha256"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("70bf1840fd7c0d2d8ef0a42a817eb29f854c1af8f7c59fc03ac7bdee9545aff8\n各个参数说明：\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("提交的描述信息\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("指定镜像作者\n    e218edb10161：容器ID\n    runoob/ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("指定要创建的目标镜像名\n我们可以使用 docker images 命令来查看我们的新镜像 runoob/ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v2： \n使用我们的新镜像 runoob/ubuntu 来启动一个容器\nrunoob@runoob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("~$ docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i runoob/ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v2 /bin/bash                            \nroot@1a9fbdeb5da3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n@       构建镜像\n我们使用命令 docker build ， 从零开始来创建一个新的镜像。为此，我们需要创建一个 Dockerfile 文件，其中包含一组指令来告诉 Docker 如何构建我们的镜像。\nrunoob@runoob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("~$ cat Dockerfile \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("    centos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6.7\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MAINTAINER")]),t._v("      Fisher "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fisher@sudops.com"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v("     /bin/echo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root:123456'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("chpasswd\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v("     useradd runoob\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v("     /bin/echo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runoob:123456'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("chpasswd\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v("     /bin/echo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LANG=\\"en_US.UTF-8\\""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("/etc/default/local\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v("  22\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v("  80\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v("     /usr/sbin/sshd "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("D\n\n每一个指令都会在镜像上创建一个新的层，每一个指令的前缀都必须是大写的。\n第一条FROM，指定使用哪个镜像源\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" 指令告诉docker 在镜像内执行命令，安装了什么。。。\n然后，我们使用 Dockerfile 文件，通过 docker build 命令来构建一个镜像。\n\nrunoob@runoob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("~$ docker build "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t runoob/centos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6.7 .\nSending build context to Docker daemon 17.92 kB\nStep 1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FROM centos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6.7\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("&gt; d95b5ca17cc3\nStep 2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MAINTAINER Fisher "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fisher@sudops.com"')]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("&gt; Using cache\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("&gt; 0c92299c6f03\nStep 3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RUN /bin/echo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root:123456'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("chpasswd\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("&gt; Using cache\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("&gt; 0397ce2fbd0a\nStep 4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RUN useradd runoob\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\n参数说明：\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t ：指定要创建的目标镜像名\n    . ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径\n使用docker images 查看创建的镜像已经在列表中存在"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("镜像ID为860c279d2fec\n我们可以使用新的镜像来创建容器\nrunoob@runoob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("~$ docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i runoob/centos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6.7  /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@41c28d18b5fb /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# id runoob")]),t._v("\nuid=500(runoob) gid=500(runoob) groups=500(runoob)\n\n我们可以使用 docker tag 命令，为镜像添加一个新的标签。\nrunoob@runoob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("~$ docker tag 860c279d2fec runoob/centos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("dev\ndocker tag 镜像ID，这里是 860c279d2fec "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("用户名称、镜像源名(repository name)和新的标签名(tag)。\n使用 docker images 命令可以看到，ID为860c279d2fec的镜像多一个标签。\n\n@       删除镜像\n先停止由镜像创建的容器\ndocker stop containers\n删除由镜像创建的容器\ndocker rm containers\n再删除镜像\ndocker rmi image\n\n  \n\n\n\n\ndocker配置\n================================================================\n@       配置镜像拉取国内站点：\nhttps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//registry.docker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cn.com\nhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//hub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mirror.c.163.com\nhttps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//3laho3y3.mirror.aliyuncs.com\nhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//f1361db2.m.daocloud.io\nhttps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//mirror.ccs.tencentyun.com\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在dockerd后面加参数")]),t._v("\nExecStart=/usr/bin/dockerd "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("registry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mirror=https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//registry.docker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cn.com\n\n以上操作后重启一下 Docker\nsudo systemctl daemon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("reload\nsudo systemctl restart docker\n")])])])])},[],!1,null,null,null);n.default=e.exports}}]);